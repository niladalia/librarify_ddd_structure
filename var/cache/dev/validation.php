<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'Symfony.Component.Form.Form' => 0,
'IteratorAggregate' => 1,
'Symfony.Component.Form.FormInterface' => 2,
'Symfony.Component.Form.ClearableErrorsInterface' => 3,
'Traversable' => 4,
'Countable' => 5,
'ArrayAccess' => 6,
'App.Entity.Author' => 7,
'App.Entity.Book' => 8,
'App.Entity.Category' => 9,
'App.Form.Model.CategoryDto' => 10,
'App.Form.Model.BookDto' => 11,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Form\\Extension\\Validator\\Constraints\\Form')),
        ],
        null,
        [
            'stdClass' => [
                'constraints' => [
                    [
                        $o[1],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[1],
                        ],
                        'Form' => [
                            $o[1],
                        ],
                    ],
                ],
                'traversalStrategy' => [
                    2,
                ],
                'name' => [
                    'Symfony\\Component\\Form\\Form',
                ],
                'defaultGroup' => [
                    'Form',
                ],
                'payload' => [
                    1 => null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Form',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'IteratorAggregate',
                ],
                'defaultGroup' => [
                    'IteratorAggregate',
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\FormInterface',
                ],
                'defaultGroup' => [
                    'FormInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Symfony\\Component\\Form\\ClearableErrorsInterface',
                ],
                'defaultGroup' => [
                    'ClearableErrorsInterface',
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Traversable',
                ],
                'defaultGroup' => [
                    'Traversable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'Countable',
                ],
                'defaultGroup' => [
                    'Countable',
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (\Symfony\Component\VarExporter\Internal\Registry::$factories['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'ArrayAccess',
                ],
                'defaultGroup' => [
                    'ArrayAccess',
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity')),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\All'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\All')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
        ],
        null,
        [
            'stdClass' => [
                'constraints' => [
                    [
                        $o[1],
                    ],
                    2 => [
                        $o[3],
                        $o[4],
                        $o[5],
                    ],
                    6 => [
                        $o[7],
                    ],
                    8 => [
                        $o[9],
                        $o[12],
                        $o[13],
                    ],
                    [
                        $o[10],
                        $o[11],
                    ],
                ],
                'constraintsByGroup' => [
                    [
                        'Default' => [
                            $o[1],
                        ],
                        'Author' => [
                            $o[1],
                        ],
                    ],
                    2 => [
                        'Default' => [
                            $o[3],
                            $o[4],
                            $o[5],
                        ],
                        'Author' => [
                            $o[3],
                            $o[4],
                            $o[5],
                        ],
                    ],
                    6 => [
                        'Default' => [
                            $o[7],
                        ],
                        'Author' => [
                            $o[7],
                        ],
                    ],
                    8 => [
                        'Default' => [
                            $o[9],
                            $o[12],
                            $o[13],
                        ],
                        'Author' => [
                            $o[9],
                            $o[12],
                            $o[13],
                        ],
                    ],
                ],
                'name' => [
                    'App\\Entity\\Author',
                    2 => 'name',
                    6 => 'id',
                    8 => 'books',
                ],
                'defaultGroup' => [
                    'Author',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[2],
                        ],
                        'id' => [
                            $o[6],
                        ],
                        'books' => [
                            $o[8],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[2],
                        'id' => $o[6],
                        'books' => $o[8],
                    ],
                ],
                'payload' => [
                    1 => null,
                    3 => null,
                    null,
                    null,
                    7 => null,
                    9 => null,
                    null,
                    null,
                    null,
                    null,
                ],
                'groups' => [
                    1 => [
                        'Default',
                        'Author',
                    ],
                    3 => [
                        'Default',
                        'Author',
                    ],
                    [
                        'Default',
                        'Author',
                    ],
                    [
                        'Default',
                        'Author',
                    ],
                    7 => [
                        'Default',
                        'Author',
                    ],
                    9 => [
                        'Default',
                        'Author',
                    ],
                    [
                        'Default',
                        'Author',
                    ],
                    [
                        'Default',
                        'Author',
                    ],
                    [
                        'Default',
                        'Author',
                    ],
                    [
                        'Default',
                        'Author',
                    ],
                ],
                'fields' => [
                    1 => 'name',
                ],
                'class' => [
                    2 => 'App\\Entity\\Author',
                    6 => 'App\\Entity\\Author',
                    8 => 'App\\Entity\\Author',
                ],
                'property' => [
                    2 => 'name',
                    6 => 'id',
                    8 => 'books',
                ],
                'min' => [
                    4 => 3,
                ],
                'type' => [
                    5 => 'App\\Entity\\Author\\AuthorName',
                    7 => 'Ramsey\\Uuid\\UuidInterface',
                    11 => 'App\\Entity\\Book',
                    'Doctrine\\Common\\Collections\\Collection',
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\All'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\All')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Length'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Length')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\All'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Book',
                    'domainEvents',
                    7 => 'title',
                    10 => 'image',
                    13 => 'pages',
                    15 => 'categories',
                    21 => 'author',
                    23 => 'score',
                    26 => 'description',
                ],
                'defaultGroup' => [
                    'Book',
                ],
                'members' => [
                    [
                        'domainEvents' => [
                            $o[1],
                        ],
                        'title' => [
                            $o[7],
                        ],
                        'image' => [
                            $o[10],
                        ],
                        'pages' => [
                            $o[13],
                        ],
                        'categories' => [
                            $o[15],
                        ],
                        'author' => [
                            $o[21],
                        ],
                        'score' => [
                            $o[23],
                        ],
                        'description' => [
                            $o[26],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'domainEvents' => $o[1],
                        'title' => $o[7],
                        'image' => $o[10],
                        'pages' => $o[13],
                        'categories' => $o[15],
                        'author' => $o[21],
                        'score' => $o[23],
                        'description' => $o[26],
                    ],
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[5],
                        $o[6],
                    ],
                    [
                        $o[3],
                        $o[4],
                    ],
                    7 => [
                        $o[8],
                        $o[9],
                    ],
                    10 => [
                        $o[11],
                        $o[12],
                    ],
                    13 => [
                        $o[14],
                    ],
                    15 => [
                        $o[16],
                        $o[19],
                        $o[20],
                    ],
                    [
                        $o[17],
                        $o[18],
                    ],
                    21 => [
                        $o[22],
                    ],
                    23 => [
                        $o[24],
                        $o[25],
                    ],
                    26 => [
                        $o[27],
                        $o[28],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                            $o[5],
                            $o[6],
                        ],
                        'Book' => [
                            $o[2],
                            $o[5],
                            $o[6],
                        ],
                    ],
                    7 => [
                        'Default' => [
                            $o[8],
                            $o[9],
                        ],
                        'Book' => [
                            $o[8],
                            $o[9],
                        ],
                    ],
                    10 => [
                        'Default' => [
                            $o[11],
                            $o[12],
                        ],
                        'Book' => [
                            $o[11],
                            $o[12],
                        ],
                    ],
                    13 => [
                        'Default' => [
                            $o[14],
                        ],
                        'Book' => [
                            $o[14],
                        ],
                    ],
                    15 => [
                        'Default' => [
                            $o[16],
                            $o[19],
                            $o[20],
                        ],
                        'Book' => [
                            $o[16],
                            $o[19],
                            $o[20],
                        ],
                    ],
                    21 => [
                        'Default' => [
                            $o[22],
                        ],
                        'Book' => [
                            $o[22],
                        ],
                    ],
                    23 => [
                        'Default' => [
                            $o[24],
                            $o[25],
                        ],
                        'Book' => [
                            $o[24],
                            $o[25],
                        ],
                    ],
                    26 => [
                        'Default' => [
                            $o[27],
                            $o[28],
                        ],
                        'Book' => [
                            $o[27],
                            $o[28],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'App\\Entity\\Book',
                    7 => 'App\\Entity\\Book',
                    10 => 'App\\Entity\\Book',
                    13 => 'App\\Entity\\Book',
                    15 => 'App\\Entity\\Book',
                    21 => 'App\\Entity\\Book',
                    23 => 'App\\Entity\\Book',
                    26 => 'App\\Entity\\Book',
                ],
                'property' => [
                    1 => 'domainEvents',
                    7 => 'title',
                    10 => 'image',
                    13 => 'pages',
                    15 => 'categories',
                    21 => 'author',
                    23 => 'score',
                    26 => 'description',
                ],
                'payload' => [
                    2 => null,
                    null,
                    null,
                    null,
                    null,
                    8 => null,
                    null,
                    11 => null,
                    null,
                    14 => null,
                    16 => null,
                    null,
                    null,
                    null,
                    null,
                    22 => null,
                    24 => null,
                    null,
                    27 => null,
                    null,
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    8 => [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    11 => [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    14 => [
                        'Default',
                        'Book',
                    ],
                    16 => [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    22 => [
                        'Default',
                        'Book',
                    ],
                    24 => [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                    27 => [
                        'Default',
                        'Book',
                    ],
                    [
                        'Default',
                        'Book',
                    ],
                ],
                'type' => [
                    4 => 'Symfony\\Contracts\\EventDispatcher\\Event',
                    'array',
                    8 => 'App\\Entity\\Book\\Title',
                    11 => 'string',
                    14 => 'int',
                    18 => 'App\\Entity\\Category',
                    'Doctrine\\Common\\Collections\\Collection',
                    22 => 'App\\Entity\\Author',
                    24 => 'App\\Entity\\Book\\Score',
                    27 => 'App\\Entity\\Book\\Description',
                ],
                'max' => [
                    12 => 255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\Type'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\Type')),
            $f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'](),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\All'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\All')),
            clone ($p['Symfony\\Component\\Validator\\Constraints\\NotNull'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotNull')),
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\Type'],
            clone $p['Symfony\\Component\\Validator\\Constraints\\NotNull'],
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Entity\\Category',
                    'name',
                    4 => 'books',
                ],
                'defaultGroup' => [
                    'Category',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                        'books' => [
                            $o[4],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                        'books' => $o[4],
                    ],
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                        $o[3],
                    ],
                    4 => [
                        $o[5],
                        $o[8],
                        $o[9],
                    ],
                    [
                        $o[6],
                        $o[7],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                            $o[3],
                        ],
                        'Category' => [
                            $o[2],
                            $o[3],
                        ],
                    ],
                    4 => [
                        'Default' => [
                            $o[5],
                            $o[8],
                            $o[9],
                        ],
                        'Category' => [
                            $o[5],
                            $o[8],
                            $o[9],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'App\\Entity\\Category',
                    4 => 'App\\Entity\\Category',
                ],
                'property' => [
                    1 => 'name',
                    4 => 'books',
                ],
                'payload' => [
                    2 => null,
                    null,
                    5 => null,
                    null,
                    null,
                    null,
                    null,
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'Category',
                    ],
                    [
                        'Default',
                        'Category',
                    ],
                    5 => [
                        'Default',
                        'Category',
                    ],
                    [
                        'Default',
                        'Category',
                    ],
                    [
                        'Default',
                        'Category',
                    ],
                    [
                        'Default',
                        'Category',
                    ],
                    [
                        'Default',
                        'Category',
                    ],
                ],
                'type' => [
                    3 => 'App\\Entity\\Category\\CategoryName',
                    7 => 'App\\Entity\\Book',
                    'Doctrine\\Common\\Collections\\Collection',
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Form\\Model\\CategoryDto',
                    'name',
                ],
                'defaultGroup' => [
                    'CategoryDto',
                ],
                'members' => [
                    [
                        'name' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'name' => $o[1],
                    ],
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                        ],
                        'CategoryDto' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'App\\Form\\Model\\CategoryDto',
                ],
                'property' => [
                    1 => 'name',
                ],
                'payload' => [
                    2 => null,
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'CategoryDto',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            (($f = &\Symfony\Component\VarExporter\Internal\Registry::$factories)['Symfony\\Component\\Validator\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\ClassMetadata'))(),
            ($f['Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::f('Symfony\\Component\\Validator\\Mapping\\PropertyMetadata'))(),
            clone (\Symfony\Component\VarExporter\Internal\Registry::$prototypes['Symfony\\Component\\Validator\\Constraints\\NotBlank'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Symfony\\Component\\Validator\\Constraints\\NotBlank')),
        ],
        null,
        [
            'stdClass' => [
                'name' => [
                    'App\\Form\\Model\\BookDto',
                    'title',
                ],
                'defaultGroup' => [
                    'BookDto',
                ],
                'members' => [
                    [
                        'title' => [
                            $o[1],
                        ],
                    ],
                ],
                'properties' => [
                    [
                        'title' => $o[1],
                    ],
                ],
                'constraints' => [
                    1 => [
                        $o[2],
                    ],
                ],
                'constraintsByGroup' => [
                    1 => [
                        'Default' => [
                            $o[2],
                        ],
                        'BookDto' => [
                            $o[2],
                        ],
                    ],
                ],
                'class' => [
                    1 => 'App\\Form\\Model\\BookDto',
                ],
                'property' => [
                    1 => 'title',
                ],
                'payload' => [
                    2 => null,
                ],
                'groups' => [
                    2 => [
                        'Default',
                        'BookDto',
                    ],
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
