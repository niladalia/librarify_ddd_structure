<?php

namespace Container3hvB4Ye;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getMessenger_Transport_LibrarifyBookCreatedSubscriberService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'messenger.transport.librarify_book_created_subscriber' shared service.
     *
     * @return \Symfony\Component\Messenger\Transport\TransportInterface
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Receiver/ReceiverInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Sender/SenderInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/TransportInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/messenger/Transport/Serialization/SerializerInterface.php';
        include_once \dirname(__DIR__, 4).'/src/Shared/Infrastructure/Event/BookCreatedDomainEventDecoder.php';

        $a = ($container->privates['messenger.transport_factory'] ?? $container->load('getMessenger_TransportFactoryService'));

        if (isset($container->privates['messenger.transport.librarify_book_created_subscriber'])) {
            return $container->privates['messenger.transport.librarify_book_created_subscriber'];
        }

        return $container->privates['messenger.transport.librarify_book_created_subscriber'] = $a->createTransport($container->getEnv('MESSENGER_TRANSPORT_DSN'), ['exchange' => ['name' => 'exchange_librarify', 'type' => 'topic'], 'queues' => ['librarify.book.book_created' => ['binding_keys' => ['librarify.book.1.event.book.created']]], 'transport_name' => 'librarify_book_created_subscriber'], new \App\Shared\Infrastructure\Event\BookCreatedDomainEventDecoder());
    }
}
