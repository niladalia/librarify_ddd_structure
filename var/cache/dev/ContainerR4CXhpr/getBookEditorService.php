<?php

namespace ContainerR4CXhpr;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getBookEditorService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'App\Books\Application\Edit\BookEditor' shared autowired service.
     *
     * @return \App\Books\Application\Edit\BookEditor
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/src/Books/Application/Edit/BookEditor.php';
        include_once \dirname(__DIR__, 4).'/src/Books/Application/Update/UpdateBookCategory.php';
        include_once \dirname(__DIR__, 4).'/src/Categories/Application/Find/CategoryFinder.php';
        include_once \dirname(__DIR__, 4).'/src/Categories/Application/Create/CategoryCreator.php';

        $a = ($container->privates['form.factory'] ?? $container->load('getForm_FactoryService'));

        if (isset($container->privates['App\\Books\\Application\\Edit\\BookEditor'])) {
            return $container->privates['App\\Books\\Application\\Edit\\BookEditor'];
        }
        $b = ($container->privates['App\\Categories\\Infrastructure\\Persistence\\DoctrineCategoryRepository'] ?? $container->load('getDoctrineCategoryRepositoryService'));

        return $container->privates['App\\Books\\Application\\Edit\\BookEditor'] = new \App\Books\Application\Edit\BookEditor(($container->privates['App\\Books\\Infrastructure\\Persistence\\DoctrineBookRepository'] ?? $container->load('getDoctrineBookRepositoryService')), $a, ($container->privates['App\\FileUploader\\Application\\FileUploaderS3'] ?? $container->load('getFileUploaderS3Service')), ($container->privates['App\\Books\\Application\\Find\\BookFinder'] ?? $container->load('getBookFinderService')), new \App\Books\Application\Update\UpdateBookCategory(new \App\Categories\Application\Find\CategoryFinder($b), new \App\Categories\Application\Create\CategoryCreator($b)), ($container->privates['App\\Books\\Application\\Update\\UpdateBookAuthor'] ?? $container->load('getUpdateBookAuthorService')));
    }
}
