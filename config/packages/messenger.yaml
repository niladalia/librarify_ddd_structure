framework:
    messenger:
        buses:
            messenger.bus.event.async:
                default_middleware: allow_no_handlers
        transports:
            librarify_book_created_subscriber:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                serializer: App\Shared\Infrastructure\Event\BookCreatedDomainEventDecoder
                options:    
                    exchange:
                        name: exchange_librarify
                        type: topic                      
                    queues:
                        librarify.book.book_created:
                            binding_keys: [ 'librarify.book.1.event.book.created' ]
                retry_strategy:
                    max_retries: 5                                  
            amqp:
                dsn: '%env(MESSENGER_TRANSPORT_DSN)%'
                serializer: serializer.amqp
                options:
                    exchange:
                        name: exchange_librarify
                        type: topic
                    queues: [ ]
            sync: 'sync://'


        routing:
            '*': amqp
            App\Authors\Application\Create\CreateAuthorCommand: sync
#            'App\Books\Domain\BookCreatedDomainEvent': librarify_book_created_subscriber
#            'App\Books\Domain\BookDeletedDomainEvent': notify_user_on_book_deleted
